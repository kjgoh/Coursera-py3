from zipfile import ZipFile
from PIL import Image, ImageDraw
import pytesseract
import cv2 as cv
import numpy as np
from IPython.display import display
import math


# loading the face detection classifier
face_cascade = cv.CascadeClassifier('readonly/haarcascade_frontalface_default.xml')
eye_cascade = cv.CascadeClassifier('readonly/haarcascade_eye.xml')

# the rest is up to you!

filename = "readonly/small_img.zip"

z = ZipFile(filename, "r")
files = {}

for name in z.namelist():
    files[name] = []
print(files)

images = []
i = 0
#facelist = []


with ZipFile(filename, "r") as archive:
    for entry in archive.infolist():
        i = i + 1
        with archive.open(entry) as file:
            images.append(Image.open(file))
            img = images[i-1]
           
            text = pytesseract.image_to_string(Image.open(file))
            text = text.lower()
            #print(text)
            files[z.namelist()[i-1]].append(text)


userinp = input("Please type a word: ")
userinp = userinp.lower()

keys = files.keys()
#print(keys)

keylist = []

for key in keys:
    #print(files[key])
    for f in files[key]:
        #print(f)
        if userinp in f:
            print(key)
            keylist.append(key)
            

#print(keylist)
#keylist = ['a-1.png', 'a-3.png']

if len(keylist) > 0:
    for k in keylist:
        facelist = []
        print("Results found in file " + str(k))
        with ZipFile(filename, "r") as archive:
            image = cv.imdecode(np.frombuffer((archive.read(k)), np.uint8), 1)
            #display(image)
            gray = cv.cvtColor(image, cv.COLOR_BGR2GRAY)
            faces = face_cascade.detectMultiScale(gray, 1.3, 5)
            #display(faces)
        
            for (x,y,w,h) in faces:
                #image = cv.cvtColor(image, cv.COLOR_BGR2RGB)
                cropped = image[y:y+h, x:x+w]
                cropped = cv.cvtColor(cropped, cv.COLOR_BGR2RGB)
                cropped = Image.fromarray(np.uint8(cropped))
                facelist.append(cropped)
        #facelist = []
        if len(facelist) == 0:
            print("But there were no faces in that file!")
        else:

            # create a contact sheet 
            first_image=facelist[0]
            contact_sheet=Image.new(first_image.mode, (first_image.width*6,first_image.height*3))
            x=0
            y=0

            for f in facelist:
                f = f.resize((first_image.width, first_image.height), Image.BILINEAR)
                # Lets paste the current image into the contact sheet
                contact_sheet.paste(f, (x, y) )
                # Now we update our X position. If it is going to be the width of the image, then we set it to 0
                # and update Y as well to point to the next "line" of the contact sheet.
                if x+first_image.width == contact_sheet.width:
                    x=0
                    y=y+first_image.height
                else:
                    x=x+first_image.width

            display(contact_sheet)

else:
    print("Word not found in any of the files. Please try a different word")
